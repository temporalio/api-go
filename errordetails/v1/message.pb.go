// The MIT License
//
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// Code generated by protoc-gen-go. DO NOT EDIT.
// plugins:
// 	protoc-gen-go
// 	protoc
// source: temporal/api/errordetails/v1/message.proto

// These error details are supplied in google.rpc.Status#details as described in "Google APIs, Error Model" (https://cloud.google.com/apis/design/errors#error_model)
// and extend standard Error Details defined in https://github.com/googleapis/googleapis/blob/master/google/rpc/error_details.proto

package errordetails

import (
	reflect "reflect"
	sync "sync"

	v11 "go.temporal.io/api/common/v1"
	v1 "go.temporal.io/api/enums/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NotFoundFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentCluster string `protobuf:"bytes,1,opt,name=current_cluster,json=currentCluster,proto3" json:"current_cluster,omitempty"`
	ActiveCluster  string `protobuf:"bytes,2,opt,name=active_cluster,json=activeCluster,proto3" json:"active_cluster,omitempty"`
}

func (x *NotFoundFailure) Reset() {
	*x = NotFoundFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotFoundFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotFoundFailure) ProtoMessage() {}

func (x *NotFoundFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotFoundFailure.ProtoReflect.Descriptor instead.
func (*NotFoundFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{0}
}

func (x *NotFoundFailure) GetCurrentCluster() string {
	if x != nil {
		return x.CurrentCluster
	}
	return ""
}

func (x *NotFoundFailure) GetActiveCluster() string {
	if x != nil {
		return x.ActiveCluster
	}
	return ""
}

type WorkflowExecutionAlreadyStartedFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartRequestId string `protobuf:"bytes,1,opt,name=start_request_id,json=startRequestId,proto3" json:"start_request_id,omitempty"`
	RunId          string `protobuf:"bytes,2,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`
}

func (x *WorkflowExecutionAlreadyStartedFailure) Reset() {
	*x = WorkflowExecutionAlreadyStartedFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowExecutionAlreadyStartedFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowExecutionAlreadyStartedFailure) ProtoMessage() {}

func (x *WorkflowExecutionAlreadyStartedFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowExecutionAlreadyStartedFailure.ProtoReflect.Descriptor instead.
func (*WorkflowExecutionAlreadyStartedFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{1}
}

func (x *WorkflowExecutionAlreadyStartedFailure) GetStartRequestId() string {
	if x != nil {
		return x.StartRequestId
	}
	return ""
}

func (x *WorkflowExecutionAlreadyStartedFailure) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

type NamespaceNotActiveFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace      string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	CurrentCluster string `protobuf:"bytes,2,opt,name=current_cluster,json=currentCluster,proto3" json:"current_cluster,omitempty"`
	ActiveCluster  string `protobuf:"bytes,3,opt,name=active_cluster,json=activeCluster,proto3" json:"active_cluster,omitempty"`
}

func (x *NamespaceNotActiveFailure) Reset() {
	*x = NamespaceNotActiveFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamespaceNotActiveFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceNotActiveFailure) ProtoMessage() {}

func (x *NamespaceNotActiveFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceNotActiveFailure.ProtoReflect.Descriptor instead.
func (*NamespaceNotActiveFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{2}
}

func (x *NamespaceNotActiveFailure) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *NamespaceNotActiveFailure) GetCurrentCluster() string {
	if x != nil {
		return x.CurrentCluster
	}
	return ""
}

func (x *NamespaceNotActiveFailure) GetActiveCluster() string {
	if x != nil {
		return x.ActiveCluster
	}
	return ""
}

type NamespaceInvalidStateFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	// Current state of the requested namespace.
	State v1.NamespaceState `protobuf:"varint,2,opt,name=state,proto3,enum=temporal.api.enums.v1.NamespaceState" json:"state,omitempty"`
	// Allowed namespace states for requested operation.
	// For example NAMESPACE_STATE_DELETED is forbidden for most operations but allowed for DescribeNamespace.
	AllowedStates []v1.NamespaceState `protobuf:"varint,3,rep,packed,name=allowed_states,json=allowedStates,proto3,enum=temporal.api.enums.v1.NamespaceState" json:"allowed_states,omitempty"`
}

func (x *NamespaceInvalidStateFailure) Reset() {
	*x = NamespaceInvalidStateFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamespaceInvalidStateFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceInvalidStateFailure) ProtoMessage() {}

func (x *NamespaceInvalidStateFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceInvalidStateFailure.ProtoReflect.Descriptor instead.
func (*NamespaceInvalidStateFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{3}
}

func (x *NamespaceInvalidStateFailure) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *NamespaceInvalidStateFailure) GetState() v1.NamespaceState {
	if x != nil {
		return x.State
	}
	return v1.NamespaceState(0)
}

func (x *NamespaceInvalidStateFailure) GetAllowedStates() []v1.NamespaceState {
	if x != nil {
		return x.AllowedStates
	}
	return nil
}

type NamespaceNotFoundFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *NamespaceNotFoundFailure) Reset() {
	*x = NamespaceNotFoundFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamespaceNotFoundFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceNotFoundFailure) ProtoMessage() {}

func (x *NamespaceNotFoundFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceNotFoundFailure.ProtoReflect.Descriptor instead.
func (*NamespaceNotFoundFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{4}
}

func (x *NamespaceNotFoundFailure) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type NamespaceAlreadyExistsFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NamespaceAlreadyExistsFailure) Reset() {
	*x = NamespaceAlreadyExistsFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NamespaceAlreadyExistsFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NamespaceAlreadyExistsFailure) ProtoMessage() {}

func (x *NamespaceAlreadyExistsFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NamespaceAlreadyExistsFailure.ProtoReflect.Descriptor instead.
func (*NamespaceAlreadyExistsFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{5}
}

type ClientVersionNotSupportedFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientVersion     string `protobuf:"bytes,1,opt,name=client_version,json=clientVersion,proto3" json:"client_version,omitempty"`
	ClientName        string `protobuf:"bytes,2,opt,name=client_name,json=clientName,proto3" json:"client_name,omitempty"`
	SupportedVersions string `protobuf:"bytes,3,opt,name=supported_versions,json=supportedVersions,proto3" json:"supported_versions,omitempty"`
}

func (x *ClientVersionNotSupportedFailure) Reset() {
	*x = ClientVersionNotSupportedFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientVersionNotSupportedFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientVersionNotSupportedFailure) ProtoMessage() {}

func (x *ClientVersionNotSupportedFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientVersionNotSupportedFailure.ProtoReflect.Descriptor instead.
func (*ClientVersionNotSupportedFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{6}
}

func (x *ClientVersionNotSupportedFailure) GetClientVersion() string {
	if x != nil {
		return x.ClientVersion
	}
	return ""
}

func (x *ClientVersionNotSupportedFailure) GetClientName() string {
	if x != nil {
		return x.ClientName
	}
	return ""
}

func (x *ClientVersionNotSupportedFailure) GetSupportedVersions() string {
	if x != nil {
		return x.SupportedVersions
	}
	return ""
}

type ServerVersionNotSupportedFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ServerVersion                 string `protobuf:"bytes,1,opt,name=server_version,json=serverVersion,proto3" json:"server_version,omitempty"`
	ClientSupportedServerVersions string `protobuf:"bytes,2,opt,name=client_supported_server_versions,json=clientSupportedServerVersions,proto3" json:"client_supported_server_versions,omitempty"`
}

func (x *ServerVersionNotSupportedFailure) Reset() {
	*x = ServerVersionNotSupportedFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerVersionNotSupportedFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerVersionNotSupportedFailure) ProtoMessage() {}

func (x *ServerVersionNotSupportedFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerVersionNotSupportedFailure.ProtoReflect.Descriptor instead.
func (*ServerVersionNotSupportedFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{7}
}

func (x *ServerVersionNotSupportedFailure) GetServerVersion() string {
	if x != nil {
		return x.ServerVersion
	}
	return ""
}

func (x *ServerVersionNotSupportedFailure) GetClientSupportedServerVersions() string {
	if x != nil {
		return x.ClientSupportedServerVersions
	}
	return ""
}

type CancellationAlreadyRequestedFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CancellationAlreadyRequestedFailure) Reset() {
	*x = CancellationAlreadyRequestedFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancellationAlreadyRequestedFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancellationAlreadyRequestedFailure) ProtoMessage() {}

func (x *CancellationAlreadyRequestedFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancellationAlreadyRequestedFailure.ProtoReflect.Descriptor instead.
func (*CancellationAlreadyRequestedFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{8}
}

type QueryFailedFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *QueryFailedFailure) Reset() {
	*x = QueryFailedFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFailedFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFailedFailure) ProtoMessage() {}

func (x *QueryFailedFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFailedFailure.ProtoReflect.Descriptor instead.
func (*QueryFailedFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{9}
}

type PermissionDeniedFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Reason string `protobuf:"bytes,1,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *PermissionDeniedFailure) Reset() {
	*x = PermissionDeniedFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionDeniedFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionDeniedFailure) ProtoMessage() {}

func (x *PermissionDeniedFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionDeniedFailure.ProtoReflect.Descriptor instead.
func (*PermissionDeniedFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{10}
}

func (x *PermissionDeniedFailure) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type ResourceExhaustedFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cause v1.ResourceExhaustedCause `protobuf:"varint,1,opt,name=cause,proto3,enum=temporal.api.enums.v1.ResourceExhaustedCause" json:"cause,omitempty"`
}

func (x *ResourceExhaustedFailure) Reset() {
	*x = ResourceExhaustedFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResourceExhaustedFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceExhaustedFailure) ProtoMessage() {}

func (x *ResourceExhaustedFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceExhaustedFailure.ProtoReflect.Descriptor instead.
func (*ResourceExhaustedFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{11}
}

func (x *ResourceExhaustedFailure) GetCause() v1.ResourceExhaustedCause {
	if x != nil {
		return x.Cause
	}
	return v1.ResourceExhaustedCause(0)
}

type SystemWorkflowFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// WorkflowId and RunId of the Temporal system workflow performing the underlying operation.
	// Looking up the info of the system workflow run may help identify the issue causing the failure.
	WorkflowExecution *v11.WorkflowExecution `protobuf:"bytes,1,opt,name=workflow_execution,json=workflowExecution,proto3" json:"workflow_execution,omitempty"`
	// Serialized error returned by the system workflow performing the underlying operation.
	WorkflowError string `protobuf:"bytes,2,opt,name=workflow_error,json=workflowError,proto3" json:"workflow_error,omitempty"`
}

func (x *SystemWorkflowFailure) Reset() {
	*x = SystemWorkflowFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SystemWorkflowFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SystemWorkflowFailure) ProtoMessage() {}

func (x *SystemWorkflowFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SystemWorkflowFailure.ProtoReflect.Descriptor instead.
func (*SystemWorkflowFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{12}
}

func (x *SystemWorkflowFailure) GetWorkflowExecution() *v11.WorkflowExecution {
	if x != nil {
		return x.WorkflowExecution
	}
	return nil
}

func (x *SystemWorkflowFailure) GetWorkflowError() string {
	if x != nil {
		return x.WorkflowError
	}
	return ""
}

type WorkflowNotReadyFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *WorkflowNotReadyFailure) Reset() {
	*x = WorkflowNotReadyFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowNotReadyFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowNotReadyFailure) ProtoMessage() {}

func (x *WorkflowNotReadyFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowNotReadyFailure.ProtoReflect.Descriptor instead.
func (*WorkflowNotReadyFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{13}
}

type NewerBuildExistsFailure struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The current default compatible build ID which will receive tasks
	DefaultBuildId string `protobuf:"bytes,1,opt,name=default_build_id,json=defaultBuildId,proto3" json:"default_build_id,omitempty"`
}

func (x *NewerBuildExistsFailure) Reset() {
	*x = NewerBuildExistsFailure{}
	if protoimpl.UnsafeEnabled {
		mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewerBuildExistsFailure) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewerBuildExistsFailure) ProtoMessage() {}

func (x *NewerBuildExistsFailure) ProtoReflect() protoreflect.Message {
	mi := &file_temporal_api_errordetails_v1_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewerBuildExistsFailure.ProtoReflect.Descriptor instead.
func (*NewerBuildExistsFailure) Descriptor() ([]byte, []int) {
	return file_temporal_api_errordetails_v1_message_proto_rawDescGZIP(), []int{14}
}

func (x *NewerBuildExistsFailure) GetDefaultBuildId() string {
	if x != nil {
		return x.DefaultBuildId
	}
	return ""
}

var File_temporal_api_errordetails_v1_message_proto protoreflect.FileDescriptor

var file_temporal_api_errordetails_v1_message_proto_rawDesc = []byte{
	0x0a, 0x2a, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x74, 0x65, 0x6d, 0x70, 0x6f,
	0x72, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x24, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x28, 0x74, 0x65, 0x6d, 0x70,
	0x6f, 0x72, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x76, 0x31,
	0x2f, 0x66, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x63, 0x61, 0x75, 0x73, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x25, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x69, 0x0a, 0x0f, 0x4e, 0x6f, 0x74, 0x46, 0x6f,
	0x75, 0x6e, 0x64, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x2b, 0x0a, 0x0f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65,
	0x72, 0x42, 0x02, 0x68, 0x00, 0x12, 0x29, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63,
	0x74, 0x69, 0x76, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x42, 0x02, 0x68, 0x00, 0x22, 0x71,
	0x0a, 0x26, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x53, 0x74, 0x61, 0x72, 0x74, 0x65, 0x64, 0x46,
	0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x10, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x73, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64, 0x42, 0x02,
	0x68, 0x00, 0x12, 0x19, 0x0a, 0x06, 0x72, 0x75, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x72, 0x75, 0x6e, 0x49, 0x64, 0x42, 0x02, 0x68, 0x00, 0x22, 0x95, 0x01, 0x0a,
	0x19, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x41, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x02, 0x68, 0x00, 0x12, 0x2b, 0x0a, 0x0f, 0x63, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x42, 0x02, 0x68, 0x00, 0x12, 0x29, 0x0a, 0x0e, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x63, 0x6c,
	0x75, 0x73, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x65, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x42, 0x02, 0x68, 0x00, 0x22, 0xd3, 0x01,
	0x0a, 0x1c, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x65, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x42, 0x02, 0x68, 0x00, 0x12, 0x3f, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x74, 0x65,
	0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e,
	0x76, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x42, 0x02, 0x68, 0x00, 0x12, 0x50, 0x0a, 0x0e, 0x61,
	0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x25, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x64,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x73, 0x42, 0x02, 0x68, 0x00, 0x22, 0x3c, 0x0a, 0x18, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x4e, 0x6f, 0x74, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x12, 0x20, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x42, 0x02, 0x68, 0x00, 0x22, 0x1f, 0x0a, 0x1d, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x45, 0x78, 0x69, 0x73, 0x74, 0x73, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x22, 0xa5, 0x01, 0x0a, 0x20, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x29, 0x0a, 0x0e, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x02, 0x68, 0x00,
	0x12, 0x23, 0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4e, 0x61, 0x6d, 0x65,
	0x42, 0x02, 0x68, 0x00, 0x12, 0x31, 0x0a, 0x12, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x42, 0x02, 0x68, 0x00, 0x22, 0x9a, 0x01, 0x0a, 0x20, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65,
	0x64, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x29, 0x0a, 0x0e, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x02, 0x68,
	0x00, 0x12, 0x4b, 0x0a, 0x20, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x75, 0x70, 0x70, 0x6f,
	0x72, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x02, 0x68, 0x00, 0x22, 0x25, 0x0a, 0x23, 0x43, 0x61,
	0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x22,
	0x14, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x46, 0x61,
	0x69, 0x6c, 0x75, 0x72, 0x65, 0x22, 0x35, 0x0a, 0x17, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x44, 0x65, 0x6e, 0x69, 0x65, 0x64, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x1a,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x42, 0x02, 0x68, 0x00, 0x22, 0x63, 0x0a, 0x18, 0x52, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x45, 0x78, 0x68, 0x61, 0x75, 0x73, 0x74, 0x65, 0x64, 0x46, 0x61, 0x69,
	0x6c, 0x75, 0x72, 0x65, 0x12, 0x47, 0x0a, 0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2d, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x45, 0x78, 0x68, 0x61, 0x75, 0x73, 0x74, 0x65, 0x64, 0x43, 0x61, 0x75, 0x73, 0x65, 0x52,
	0x05, 0x63, 0x61, 0x75, 0x73, 0x65, 0x42, 0x02, 0x68, 0x00, 0x22, 0xa0, 0x01, 0x0a, 0x15, 0x53, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x46, 0x61, 0x69, 0x6c, 0x75,
	0x72, 0x65, 0x12, 0x5c, 0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x02, 0x68, 0x00, 0x12, 0x29, 0x0a, 0x0e,
	0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x5f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x77, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x42, 0x02, 0x68, 0x00, 0x22, 0x19, 0x0a, 0x17, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f,
	0x77, 0x4e, 0x6f, 0x74, 0x52, 0x65, 0x61, 0x64, 0x79, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x22,
	0x47, 0x0a, 0x17, 0x4e, 0x65, 0x77, 0x65, 0x72, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x45, 0x78, 0x69, 0x73,
	0x74, 0x73, 0x46, 0x61, 0x69, 0x6c, 0x75, 0x72, 0x65, 0x12, 0x2c, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x5f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x49,
	0x64, 0x42, 0x02, 0x68, 0x00, 0x42, 0xa7, 0x01, 0x0a, 0x1f, 0x69, 0x6f, 0x2e, 0x74, 0x65, 0x6d, 0x70,
	0x6f, 0x72, 0x61, 0x6c, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x2f, 0x67, 0x6f, 0x2e, 0x74, 0x65, 0x6d, 0x70, 0x6f,
	0x72, 0x61, 0x6c, 0x2e, 0x69, 0x6f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2f, 0x76, 0x31, 0x3b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0xaa, 0x02, 0x1e, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x69,
	0x6f, 0x2e, 0x41, 0x70, 0x69, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x2e, 0x56, 0x31, 0xea, 0x02, 0x21, 0x54, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x6c, 0x69,
	0x6f, 0x3a, 0x3a, 0x41, 0x70, 0x69, 0x3a, 0x3a, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_temporal_api_errordetails_v1_message_proto_rawDescOnce sync.Once
	file_temporal_api_errordetails_v1_message_proto_rawDescData = file_temporal_api_errordetails_v1_message_proto_rawDesc
)

func file_temporal_api_errordetails_v1_message_proto_rawDescGZIP() []byte {
	file_temporal_api_errordetails_v1_message_proto_rawDescOnce.Do(func() {
		file_temporal_api_errordetails_v1_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_temporal_api_errordetails_v1_message_proto_rawDescData)
	})
	return file_temporal_api_errordetails_v1_message_proto_rawDescData
}

var file_temporal_api_errordetails_v1_message_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_temporal_api_errordetails_v1_message_proto_goTypes = []interface{}{
	(*NotFoundFailure)(nil),                        // 0: temporal.api.errordetails.v1.NotFoundFailure
	(*WorkflowExecutionAlreadyStartedFailure)(nil), // 1: temporal.api.errordetails.v1.WorkflowExecutionAlreadyStartedFailure
	(*NamespaceNotActiveFailure)(nil),              // 2: temporal.api.errordetails.v1.NamespaceNotActiveFailure
	(*NamespaceInvalidStateFailure)(nil),           // 3: temporal.api.errordetails.v1.NamespaceInvalidStateFailure
	(*NamespaceNotFoundFailure)(nil),               // 4: temporal.api.errordetails.v1.NamespaceNotFoundFailure
	(*NamespaceAlreadyExistsFailure)(nil),          // 5: temporal.api.errordetails.v1.NamespaceAlreadyExistsFailure
	(*ClientVersionNotSupportedFailure)(nil),       // 6: temporal.api.errordetails.v1.ClientVersionNotSupportedFailure
	(*ServerVersionNotSupportedFailure)(nil),       // 7: temporal.api.errordetails.v1.ServerVersionNotSupportedFailure
	(*CancellationAlreadyRequestedFailure)(nil),    // 8: temporal.api.errordetails.v1.CancellationAlreadyRequestedFailure
	(*QueryFailedFailure)(nil),                     // 9: temporal.api.errordetails.v1.QueryFailedFailure
	(*PermissionDeniedFailure)(nil),                // 10: temporal.api.errordetails.v1.PermissionDeniedFailure
	(*ResourceExhaustedFailure)(nil),               // 11: temporal.api.errordetails.v1.ResourceExhaustedFailure
	(*SystemWorkflowFailure)(nil),                  // 12: temporal.api.errordetails.v1.SystemWorkflowFailure
	(*WorkflowNotReadyFailure)(nil),                // 13: temporal.api.errordetails.v1.WorkflowNotReadyFailure
	(*NewerBuildExistsFailure)(nil),                // 14: temporal.api.errordetails.v1.NewerBuildExistsFailure
	(v1.NamespaceState)(0),                         // 15: temporal.api.enums.v1.NamespaceState
	(v1.ResourceExhaustedCause)(0),                 // 16: temporal.api.enums.v1.ResourceExhaustedCause
	(*v11.WorkflowExecution)(nil),                  // 17: temporal.api.common.v1.WorkflowExecution
}
var file_temporal_api_errordetails_v1_message_proto_depIdxs = []int32{
	15, // 0: temporal.api.errordetails.v1.NamespaceInvalidStateFailure.state:type_name -> temporal.api.enums.v1.NamespaceState
	15, // 1: temporal.api.errordetails.v1.NamespaceInvalidStateFailure.allowed_states:type_name -> temporal.api.enums.v1.NamespaceState
	16, // 2: temporal.api.errordetails.v1.ResourceExhaustedFailure.cause:type_name -> temporal.api.enums.v1.ResourceExhaustedCause
	17, // 3: temporal.api.errordetails.v1.SystemWorkflowFailure.workflow_execution:type_name -> temporal.api.common.v1.WorkflowExecution
	4,  // [4:4] is the sub-list for method output_type
	4,  // [4:4] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_temporal_api_errordetails_v1_message_proto_init() }
func file_temporal_api_errordetails_v1_message_proto_init() {
	if File_temporal_api_errordetails_v1_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_temporal_api_errordetails_v1_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotFoundFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_temporal_api_errordetails_v1_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowExecutionAlreadyStartedFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_temporal_api_errordetails_v1_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamespaceNotActiveFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_temporal_api_errordetails_v1_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamespaceInvalidStateFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_temporal_api_errordetails_v1_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamespaceNotFoundFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_temporal_api_errordetails_v1_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NamespaceAlreadyExistsFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_temporal_api_errordetails_v1_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientVersionNotSupportedFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_temporal_api_errordetails_v1_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerVersionNotSupportedFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_temporal_api_errordetails_v1_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancellationAlreadyRequestedFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_temporal_api_errordetails_v1_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFailedFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_temporal_api_errordetails_v1_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionDeniedFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_temporal_api_errordetails_v1_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResourceExhaustedFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_temporal_api_errordetails_v1_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SystemWorkflowFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_temporal_api_errordetails_v1_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowNotReadyFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_temporal_api_errordetails_v1_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewerBuildExistsFailure); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_temporal_api_errordetails_v1_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_temporal_api_errordetails_v1_message_proto_goTypes,
		DependencyIndexes: file_temporal_api_errordetails_v1_message_proto_depIdxs,
		MessageInfos:      file_temporal_api_errordetails_v1_message_proto_msgTypes,
	}.Build()
	File_temporal_api_errordetails_v1_message_proto = out.File
	file_temporal_api_errordetails_v1_message_proto_rawDesc = nil
	file_temporal_api_errordetails_v1_message_proto_goTypes = nil
	file_temporal_api_errordetails_v1_message_proto_depIdxs = nil
}
