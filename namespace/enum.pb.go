// The MIT License
//
// Copyright (c) 2020 Temporal Technologies Inc.  All rights reserved.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.

// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: namespace/enum.proto

package namespace

import (
	fmt "fmt"
	proto "github.com/gogo/protobuf/proto"
	math "math"
	strconv "strconv"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.GoGoProtoPackageIsVersion3 // please upgrade the proto package

type NamespaceStatus int32

const (
	NAMESPACE_STATUS_UNSPECIFIED NamespaceStatus = 0
	NAMESPACE_STATUS_REGISTERED  NamespaceStatus = 1
	NAMESPACE_STATUS_DEPRECATED  NamespaceStatus = 2
	NAMESPACE_STATUS_DELETED     NamespaceStatus = 3
)

var NamespaceStatus_name = map[int32]string{
	0: "Unspecified",
	1: "Registered",
	2: "Deprecated",
	3: "Deleted",
}

var NamespaceStatus_value = map[string]int32{
	"Unspecified": 0,
	"Registered":  1,
	"Deprecated":  2,
	"Deleted":     3,
}

func (NamespaceStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_99191c63d57e747f, []int{0}
}

type ArchivalStatus int32

const (
	ARCHIVAL_STATUS_UNSPECIFIED ArchivalStatus = 0
	ARCHIVAL_STATUS_DISABLED    ArchivalStatus = 1
	ARCHIVAL_STATUS_ENABLED     ArchivalStatus = 2
)

var ArchivalStatus_name = map[int32]string{
	0: "Unspecified",
	1: "Disabled",
	2: "Enabled",
}

var ArchivalStatus_value = map[string]int32{
	"Unspecified": 0,
	"Disabled":    1,
	"Enabled":     2,
}

func (ArchivalStatus) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_99191c63d57e747f, []int{1}
}

func init() {
	proto.RegisterEnum("namespace.NamespaceStatus", NamespaceStatus_name, NamespaceStatus_value)
	proto.RegisterEnum("namespace.ArchivalStatus", ArchivalStatus_name, ArchivalStatus_value)
}

func init() { proto.RegisterFile("namespace/enum.proto", fileDescriptor_99191c63d57e747f) }

var fileDescriptor_99191c63d57e747f = []byte{
	// 291 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0xc9, 0x4b, 0xcc, 0x4d,
	0x2d, 0x2e, 0x48, 0x4c, 0x4e, 0xd5, 0x4f, 0xcd, 0x2b, 0xcd, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0xe2, 0x84, 0x8b, 0x6a, 0x4d, 0x66, 0xe4, 0xe2, 0xf7, 0x83, 0xf1, 0x82, 0x4b, 0x12, 0x4b,
	0x4a, 0x8b, 0x85, 0x14, 0xb8, 0x64, 0xfc, 0x1c, 0x7d, 0x5d, 0x83, 0x03, 0x1c, 0x9d, 0x5d, 0xe3,
	0x83, 0x43, 0x1c, 0x43, 0x42, 0x83, 0xe3, 0x43, 0xfd, 0x82, 0x03, 0x5c, 0x9d, 0x3d, 0xdd, 0x3c,
	0x5d, 0x5d, 0x04, 0x18, 0x84, 0xe4, 0xb9, 0xa4, 0x31, 0x54, 0x04, 0xb9, 0xba, 0x7b, 0x06, 0x87,
	0xb8, 0x06, 0xb9, 0xba, 0x08, 0x30, 0x62, 0x55, 0xe0, 0xe2, 0x1a, 0x10, 0xe4, 0xea, 0xec, 0x18,
	0xe2, 0xea, 0x22, 0xc0, 0x24, 0x24, 0xc3, 0x25, 0x81, 0x45, 0x81, 0x8f, 0x2b, 0x48, 0x96, 0x59,
	0x2b, 0x87, 0x8b, 0xcf, 0xb1, 0x28, 0x39, 0x23, 0xb3, 0x2c, 0x31, 0x07, 0xea, 0x26, 0x79, 0x2e,
	0x69, 0xc7, 0x20, 0x67, 0x0f, 0xcf, 0x30, 0x47, 0x1f, 0xec, 0x4e, 0x92, 0xe1, 0x92, 0x40, 0x57,
	0xe0, 0xe2, 0x19, 0xec, 0xe8, 0xe4, 0x03, 0x76, 0x8f, 0x34, 0x97, 0x38, 0xba, 0xac, 0xab, 0x1f,
	0x44, 0x92, 0xc9, 0xa9, 0xe6, 0xc2, 0x43, 0x39, 0x86, 0x1b, 0x0f, 0xe5, 0x18, 0x3e, 0x3c, 0x94,
	0x63, 0x6c, 0x78, 0x24, 0xc7, 0xb8, 0xe2, 0x91, 0x1c, 0xe3, 0x89, 0x47, 0x72, 0x8c, 0x17, 0x1e,
	0xc9, 0x31, 0x3e, 0x78, 0x24, 0xc7, 0xf8, 0xe2, 0x91, 0x1c, 0xc3, 0x87, 0x47, 0x72, 0x8c, 0x13,
	0x1e, 0xcb, 0x31, 0x5c, 0x78, 0x2c, 0xc7, 0x70, 0xe3, 0xb1, 0x1c, 0x03, 0x97, 0x74, 0x66, 0xbe,
	0x5e, 0x49, 0x6a, 0x6e, 0x41, 0x7e, 0x51, 0x62, 0x0e, 0x24, 0x5c, 0xf5, 0xe0, 0xc1, 0x1a, 0xc0,
	0x18, 0xa5, 0x9e, 0x8e, 0x24, 0x9d, 0x99, 0xaf, 0x0f, 0x63, 0xeb, 0x82, 0x95, 0xea, 0xc3, 0x95,
	0x26, 0xb1, 0x81, 0x05, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xa0, 0xf5, 0x4b, 0x91, 0xab,
	0x01, 0x00, 0x00,
}

func (x NamespaceStatus) String() string {
	s, ok := NamespaceStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
func (x ArchivalStatus) String() string {
	s, ok := ArchivalStatus_name[int32(x)]
	if ok {
		return s
	}
	return strconv.Itoa(int(x))
}
